package resource

import (
	"encoding/json"

	tfjson "github.com/hashicorp/terraform-json"
)

const awsccApigatewayv2Route = `{
  "block": {
    "attributes": {
      "api_id": {
        "description": "The API identifier.",
        "description_kind": "plain",
        "required": true,
        "type": "string"
      },
      "api_key_required": {
        "computed": true,
        "description": "Specifies whether an API key is required for the route. Supported only for WebSocket APIs.",
        "description_kind": "plain",
        "optional": true,
        "type": "bool"
      },
      "authorization_scopes": {
        "computed": true,
        "description": "The authorization scopes supported by this route.",
        "description_kind": "plain",
        "optional": true,
        "type": [
          "list",
          "string"
        ]
      },
      "authorization_type": {
        "computed": true,
        "description": "The authorization type for the route. For WebSocket APIs, valid values are ` + "`" + `` + "`" + `NONE` + "`" + `` + "`" + ` for open access, ` + "`" + `` + "`" + `AWS_IAM` + "`" + `` + "`" + ` for using AWS IAM permissions, and ` + "`" + `` + "`" + `CUSTOM` + "`" + `` + "`" + ` for using a Lambda authorizer. For HTTP APIs, valid values are ` + "`" + `` + "`" + `NONE` + "`" + `` + "`" + ` for open access, ` + "`" + `` + "`" + `JWT` + "`" + `` + "`" + ` for using JSON Web Tokens, ` + "`" + `` + "`" + `AWS_IAM` + "`" + `` + "`" + ` for using AWS IAM permissions, and ` + "`" + `` + "`" + `CUSTOM` + "`" + `` + "`" + ` for using a Lambda authorizer.",
        "description_kind": "plain",
        "optional": true,
        "type": "string"
      },
      "authorizer_id": {
        "computed": true,
        "description": "The identifier of the ` + "`" + `` + "`" + `Authorizer` + "`" + `` + "`" + ` resource to be associated with this route. The authorizer identifier is generated by API Gateway when you created the authorizer.",
        "description_kind": "plain",
        "optional": true,
        "type": "string"
      },
      "id": {
        "computed": true,
        "description": "Uniquely identifies the resource.",
        "description_kind": "plain",
        "type": "string"
      },
      "model_selection_expression": {
        "computed": true,
        "description": "The model selection expression for the route. Supported only for WebSocket APIs.",
        "description_kind": "plain",
        "optional": true,
        "type": "string"
      },
      "operation_name": {
        "computed": true,
        "description": "The operation name for the route.",
        "description_kind": "plain",
        "optional": true,
        "type": "string"
      },
      "request_models": {
        "computed": true,
        "description": "The request models for the route. Supported only for WebSocket APIs.",
        "description_kind": "plain",
        "optional": true,
        "type": "string"
      },
      "request_parameters": {
        "computed": true,
        "description": "The request parameters for the route. Supported only for WebSocket APIs.",
        "description_kind": "plain",
        "optional": true,
        "type": "string"
      },
      "route_id": {
        "computed": true,
        "description_kind": "plain",
        "type": "string"
      },
      "route_key": {
        "description": "The route key for the route. For HTTP APIs, the route key can be either ` + "`" + `` + "`" + `$default` + "`" + `` + "`" + `, or a combination of an HTTP method and resource path, for example, ` + "`" + `` + "`" + `GET /pets` + "`" + `` + "`" + `.",
        "description_kind": "plain",
        "required": true,
        "type": "string"
      },
      "route_response_selection_expression": {
        "computed": true,
        "description": "The route response selection expression for the route. Supported only for WebSocket APIs.",
        "description_kind": "plain",
        "optional": true,
        "type": "string"
      },
      "target": {
        "computed": true,
        "description": "The target for the route.",
        "description_kind": "plain",
        "optional": true,
        "type": "string"
      }
    },
    "description": "The ` + "`" + `` + "`" + `AWS::ApiGatewayV2::Route` + "`" + `` + "`" + ` resource creates a route for an API.",
    "description_kind": "plain"
  },
  "version": 1
}`

func AwsccApigatewayv2RouteSchema() *tfjson.Schema {
	var result tfjson.Schema
	_ = json.Unmarshal([]byte(awsccApigatewayv2Route), &result)
	return &result
}
