package resource

import (
	"encoding/json"

	tfjson "github.com/hashicorp/terraform-json"
)

const awsccAppsyncFunctionConfiguration = `{
  "block": {
    "attributes": {
      "api_id": {
        "description": "The AWS AppSync GraphQL API that you want to attach using this function.",
        "description_kind": "plain",
        "required": true,
        "type": "string"
      },
      "code": {
        "computed": true,
        "description": "The resolver code that contains the request and response functions. When code is used, the runtime is required. The runtime value must be APPSYNC_JS.",
        "description_kind": "plain",
        "optional": true,
        "type": "string"
      },
      "code_s3_location": {
        "computed": true,
        "description": "The Amazon S3 endpoint (where the code is located??).",
        "description_kind": "plain",
        "optional": true,
        "type": "string"
      },
      "data_source_name": {
        "description": "The name of data source this function will attach.",
        "description_kind": "plain",
        "required": true,
        "type": "string"
      },
      "description": {
        "computed": true,
        "description": "The function description.",
        "description_kind": "plain",
        "optional": true,
        "type": "string"
      },
      "function_arn": {
        "computed": true,
        "description": "The ARN for the function generated by the service",
        "description_kind": "plain",
        "type": "string"
      },
      "function_id": {
        "computed": true,
        "description": "The unique identifier for the function generated by the service",
        "description_kind": "plain",
        "type": "string"
      },
      "function_version": {
        "computed": true,
        "description": "The version of the request mapping template. Currently, only the 2018-05-29 version of the template is supported.",
        "description_kind": "plain",
        "optional": true,
        "type": "string"
      },
      "id": {
        "computed": true,
        "description": "Uniquely identifies the resource.",
        "description_kind": "plain",
        "type": "string"
      },
      "max_batch_size": {
        "computed": true,
        "description": "The maximum number of resolver request inputs that will be sent to a single AWS Lambda function in a BatchInvoke operation.",
        "description_kind": "plain",
        "optional": true,
        "type": "number"
      },
      "name": {
        "description": "The name of the function.",
        "description_kind": "plain",
        "required": true,
        "type": "string"
      },
      "request_mapping_template": {
        "computed": true,
        "description": "The Function request mapping template. Functions support only the 2018-05-29 version of the request mapping template.",
        "description_kind": "plain",
        "optional": true,
        "type": "string"
      },
      "request_mapping_template_s3_location": {
        "computed": true,
        "description": "Describes a Sync configuration for a resolver. Contains information on which Conflict Detection, as well as Resolution strategy, should be performed when the resolver is invoked.",
        "description_kind": "plain",
        "optional": true,
        "type": "string"
      },
      "response_mapping_template": {
        "computed": true,
        "description": "The Function response mapping template.",
        "description_kind": "plain",
        "optional": true,
        "type": "string"
      },
      "response_mapping_template_s3_location": {
        "computed": true,
        "description": "The location of a response mapping template in an Amazon S3 bucket. Use this if you want to provision with a template file in Amazon S3 rather than embedding it in your CloudFormation template.",
        "description_kind": "plain",
        "optional": true,
        "type": "string"
      },
      "runtime": {
        "computed": true,
        "description": "Describes a runtime used by an AWS AppSync pipeline resolver or AWS AppSync function. Specifies the name and version of the runtime to use. Note that if a runtime is specified, code must also be specified.",
        "description_kind": "plain",
        "nested_type": {
          "attributes": {
            "name": {
              "computed": true,
              "description": "The name of the runtime to use. Currently, the only allowed value is APPSYNC_JS.",
              "description_kind": "plain",
              "optional": true,
              "type": "string"
            },
            "runtime_version": {
              "computed": true,
              "description": "The version of the runtime to use. Currently, the only allowed version is 1.0.0.",
              "description_kind": "plain",
              "optional": true,
              "type": "string"
            }
          },
          "nesting_mode": "single"
        },
        "optional": true
      },
      "sync_config": {
        "computed": true,
        "description": "Describes a Sync configuration for a resolver. Specifies which Conflict Detection strategy and Resolution strategy to use when the resolver is invoked.",
        "description_kind": "plain",
        "nested_type": {
          "attributes": {
            "conflict_detection": {
              "computed": true,
              "description": "The Conflict Detection strategy to use.",
              "description_kind": "plain",
              "optional": true,
              "type": "string"
            },
            "conflict_handler": {
              "computed": true,
              "description": "The Conflict Resolution strategy to perform in the event of a conflict.",
              "description_kind": "plain",
              "optional": true,
              "type": "string"
            },
            "lambda_conflict_handler_config": {
              "computed": true,
              "description": "The LambdaConflictHandlerConfig when configuring LAMBDA as the Conflict Handler.",
              "description_kind": "plain",
              "nested_type": {
                "attributes": {
                  "lambda_conflict_handler_arn": {
                    "computed": true,
                    "description": "The Amazon Resource Name (ARN) for the Lambda function to use as the Conflict Handler.",
                    "description_kind": "plain",
                    "optional": true,
                    "type": "string"
                  }
                },
                "nesting_mode": "single"
              },
              "optional": true
            }
          },
          "nesting_mode": "single"
        },
        "optional": true
      }
    },
    "description": "An example resource schema demonstrating some basic constructs and validation rules.",
    "description_kind": "plain"
  },
  "version": 1
}`

func AwsccAppsyncFunctionConfigurationSchema() *tfjson.Schema {
	var result tfjson.Schema
	_ = json.Unmarshal([]byte(awsccAppsyncFunctionConfiguration), &result)
	return &result
}
